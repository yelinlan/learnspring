<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd

 ">
    <!--注册bean-->
    <bean class="com.yll.service.impl.UserServiceImpl" id="userService"/>
    <bean class="com.yll.log.AfterLog" id="afterLog"/>
    <bean class="com.yll.log.BeforeLog" id="beforeLog"/>

    <!--第一种方式：引入AOP-->
    <aop:config>
        <!--切入点 execution(要执行的位置：*（访问修饰词）*（返回值）*（类名）*（方法名）*（参数）)-->
        <aop:pointcut id="pointcut" expression="execution(* com.yll.service.UserService.*(..))"/>
        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>
        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>
    </aop:config>

    <!--第二种方式：自定义类-->
    <bean class="com.yll.log.MyLog" id="myLog"/>
    <aop:config>
        <aop:aspect ref="myLog">
            <aop:pointcut id="point" expression="execution(* com.yll.service.UserService.*(..))"/>
            <aop:before method="before" pointcut-ref="point"/>
            <aop:after method="after" pointcut-ref="point"/>
        </aop:aspect>
    </aop:config>
    <!--第三种方式：注解-->
    <bean class="com.yll.log.AnnotionPointCut" id="annotionPointCut"/>
    <!--开启切面注解支持-->
    <!--proxy-target-class="false" JDK代理；  true cglib代理-->
    <aop:aspectj-autoproxy proxy-target-class="false"/>

</beans>